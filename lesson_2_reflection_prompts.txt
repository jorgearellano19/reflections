What happens when you initialize a repository? Why do you need to do it?
A repository is needed for saving all the commits that the user make.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
If we don't need all the files inside the repository, we can create an stagin area for putting there everything we want to commit in the repository. 

How can you use the staging area to make sure you have one commit per logical
change?


With the git diff, we can see the diference between the staging area, repository and the working directory and have a better control of our project.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
We can have different versions of projects and treat each one different. In a way you can make two "different" projects and fix different things

How do the diagrams help you visualize the branch structure?
It helps because you can see in a better way how the branch are related to each other.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
It results only one branch, with the commits of the two branches.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
If we merge the codes manually, we'd have a better control of our code, but we can miss something, and if we let git merge the code, maybe it could be inconsistences, and that is annoying.
